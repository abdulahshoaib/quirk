#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

total_packages=0
passed_packages=0
failed_packages=0

echo -e "${YELLOW}Starting Go tests...${NC}\n"

# Test all packages (excluding vendor)
for pkg in $(go list ./... | grep -v /vendor/); do
    ((total_packages++))
    echo -e "${YELLOW}Testing $pkg${NC}"

    go test -cover -v "$pkg"

    if [ $? -eq 0 ]; then
        echo -e "${GREEN}PASS: $pkg${NC}\n"
        ((passed_packages++))
    else
        echo -e "${RED}FAIL: $pkg${NC}\n"
        ((failed_packages++))
    fi
done

# Print summary
echo -e "${YELLOW}=== Test Summary ===${NC}"
echo -e "Total packages: $total_packages"
echo -e "${GREEN}Passed packages: $passed_packages${NC}"
echo -e "${RED}Failed packages: $failed_packages${NC}"

# Exit with status code 1 if any tests failed
if [ $failed_packages -gt 0 ]; then
    exit 1
fi

current_branch=$(git rev-parse --abbrev-ref HEAD)

if [ "$current_branch" == "main" ] || [ "$current_branch" == "master" ]; then
  echo -e "${RED}Already on main branch. Skipping PR creation. ${NC}"
  exit 1
fi

echo -e "${GREEN}All tests passed. Creating Pull Request...${NC}"

git push -u origin "$current_branch"

coverage_summary=$(go test -cover ./... | grep -v "no test files" | awk '/coverage:/ { print "- " $2 ": " $5 }')
pr_body=$(cat <<EOF
**Automated Test Report**

- Total packages tested: $total_packages

 **Coverage Summary:**
$coverage_summary

 Timestamp: $(date)

---

ðŸ¤– This PR was auto-generated by the \`quirk\` test bot after all tests passed locally.
EOF
)

gh pr create \
  --base main \
  --head "$current_branch" \
  --title "(quirk bot) Merge $current_branch into Main" \
  --body "$pr_body"

exit 0
